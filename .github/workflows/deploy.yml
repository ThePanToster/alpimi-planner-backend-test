name: Deploy a docker image

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build the image
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v6
        with:
          tags: alpimi-api:latest
          outputs: type=docker,dest=/tmp/alpimi-api.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: alpimi-api
          path: /tmp/alpimi-api.tar

  deploy:
    name: Deploy the image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: alpimi-api
          path: tmp

      - name: Upload artifact via ssh
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          strip_components: 1
          overwrite: true
          target: tmp
          source: tmp/alpimi-api.tar

      - name: Load and run image via ssh
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker stop AlpimiAPI
            docker rm --volumes AlpimiAPI
            docker rmi alpimi-api
            docker load --input tmp/alpimi-api.tar
            docker run ${{ secrets.CONTAINER_ARGS }} alpimi-api
  update-db:
    runs-on: ubuntu-latest
    name: Update database with migrations
    needs: deploy
    steps:
      - uses: actions/checkout@v4

      - name: Install .NET Core 8 latest
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Install EF Core CLI
        run: dotnet tool install dotnet-ef --global

      - name: Create a migration script
        run: dotnet ef migrations script --idempotent -o tmp/db.sql

      - name: Upload script via ssh
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          strip_components: 1
          overwrite: true
          target: tmp
          source: tmp/db.sql

      - name: Update database
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: cat tmp/db.sql | docker exec ${{ secrets.DB_QUERY_ARGS }}
